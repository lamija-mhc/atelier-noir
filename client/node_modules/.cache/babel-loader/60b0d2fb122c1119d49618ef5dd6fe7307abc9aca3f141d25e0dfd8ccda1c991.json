{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\muki_\\\\Desktop\\\\atelier-noir\\\\client\\\\src\\\\pages\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = () => {\n  _s();\n  const [poruke, setPoruke] = useState([]);\n  const [greska, setGreska] = useState(\"\");\n  useEffect(() => {\n    const fetchPoruke = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/api/poruke\");\n        if (res.ok) {\n          const data = await res.json();\n          setPoruke(data);\n        } else {\n          setGreska(\"Greška pri učitavanju poruka.\");\n        }\n      } catch (err) {\n        setGreska(\"Server greška.\");\n      }\n    };\n    fetchPoruke();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Primljene poruke\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), greska && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: greska\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }, this), poruke.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nema poruka.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Poruka\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: poruke.map(p => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: p.ime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: p.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: p.poruka\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, p._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"omWKgqbvNJ8dLHkfO67X6qQsC4s=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Messages","_s","poruke","setPoruke","greska","setGreska","fetchPoruke","res","fetch","ok","data","json","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","p","ime","email","poruka","_id","_c","$RefreshReg$"],"sources":["C:/Users/muki_/Desktop/atelier-noir/client/src/pages/Messages.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Messages = () => {\r\n  const [poruke, setPoruke] = useState([]);\r\n  const [greska, setGreska] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchPoruke = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/api/poruke\");\r\n        if (res.ok) {\r\n          const data = await res.json();\r\n          setPoruke(data);\r\n        } else {\r\n          setGreska(\"Greška pri učitavanju poruka.\");\r\n        }\r\n      } catch (err) {\r\n        setGreska(\"Server greška.\");\r\n      }\r\n    };\r\n\r\n    fetchPoruke();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"admin-section\">\r\n      <h2>Primljene poruke</h2>\r\n      {greska && <p style={{ color: \"red\" }}>{greska}</p>}\r\n      {poruke.length === 0 ? (\r\n        <p>Nema poruka.</p>\r\n      ) : (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Ime</th>\r\n              <th>Email</th>\r\n              <th>Poruka</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {poruke.map((p) => (\r\n              <tr key={p._id}>\r\n                <td>{p.ime}</td>\r\n                <td>{p.email}</td>\r\n                <td>{p.poruka}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}